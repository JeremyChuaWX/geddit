services:
  postgres:
    command: ["postgres", "-c", "log_statement=all"]
    container_name: postgres
    env_file: .env.dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $POSTGRES_URL"]
      interval: 10s
      timeout: 5s
      retries: 10
    image: postgres:alpine
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      chmod 600 /tmp/pgpass;
      mkdir -p /var/lib/pgadmin/storage/admin_admin.com;
      cp /tmp/pgpass /var/lib/pgadmin/storage/admin_admin.com/;
      /entrypoint.sh;
      "
    env_file: .env.dev
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    volumes:
      - ./pg_admin/servers.json:/pgadmin4/servers.json
      - ./pg_admin/pgpass:/tmp/pgpass

  postgres.migrate:
    command: ["up"]
    container_name: migrate
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["migrate", "-database", "$POSTGRES_URL", "-path", "/migrations"]
    env_file: .env.dev
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
